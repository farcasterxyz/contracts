version: '3.9'

services:
  anvil:
    build:
      dockerfile: Dockerfile.foundry
      context: .
    command: |
      sh -c '
        set -e
        command_args="--host 0.0.0.0 --port ${PORT:-8545} --state /var/lib/anvil/state"
        if [ -n "$$MAINNET_RPC_URL" ]; then
          echo "Starting Anvil from a forked chain"
          exec anvil $$command_args --rpc-url $$MAINNET_RPC_URL --retries 3 --timeout 10000
        else
          echo "Starting Anvil with a blank slate chain"
          exec anvil $$command_args --chain-id $$CHAIN_ID
        fi
      '
    environment:
      - CHAIN_ID
      - MAINNET_RPC_URL
    volumes:
      - anvil-data:/var/lib/anvil
      - anvil-cache:/root/.foundry/cache
    ports:
      - '${PORT:-8545}:${PORT:-8545}'
    restart: on-failure
    healthcheck:
      test: ['CMD', '/usr/bin/nc', '-z', 'localhost', '${PORT:-8545}']
      interval: 1s
      timeout: 1s
      retries: 3
    networks:
      - contracts_subnet

  deployer:
    build:
      dockerfile: Dockerfile.foundry
      context: .
    depends_on:
      - anvil
    environment:
      - DEPLOYER
    volumes:
      - .:/app
    working_dir: /app
    entrypoint: |
      sh -c '
        set -e
        export RPC_URL="http://anvil:${PORT:-8545}"
        echo "Waiting for Anvil..."
        while ! nc -z anvil "${PORT:-8545}"; do sleep 0.1; done
        echo "Anvil online"
        echo "Enabling impersonation"
        cast rpc anvil_autoImpersonateAccount true --rpc-url "$$RPC_URL" > /dev/null
        echo "Deploying contract"
        forge install
        forge script -v script/Deploy.s.sol --rpc-url "$$RPC_URL" --unlocked --broadcast --sender "$$DEPLOYER"
        echo "Disabling impersonation"
        cast rpc anvil_autoImpersonateAccount false --rpc-url "$$RPC_URL" > /dev/null
        echo "Deploy complete"
      '
    networks:
      - contracts_subnet

volumes:
  anvil-cache:
  anvil-data:

networks:
  # Allows us to share the services in this file with other Docker Compose files
  contracts_subnet:
    driver: bridge
